services:
  mysql:
    image: mysql:8.4
    container_name: mysql
    environment:
      MYSQL_DATABASE: appdb
      MYSQL_USER: appuser
      MYSQL_PASSWORD: apppass
      MYSQL_ROOT_PASSWORD: rootpass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 --protocol=TCP -uroot -prootpass || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 30
      start_period: 40s
    restart: unless-stopped
    networks:
      - appnet

  backend:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    container_name: backend
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      APP_ENV: local
      APP_DEBUG: "true"
      APP_URL: http://localhost
      SANCTUM_STATEFUL_DOMAINS: localhost:3000
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: appdb
      DB_USERNAME: appuser
      DB_PASSWORD: apppass
    volumes:
      - ./backend:/var/www/html
    entrypoint: ["/entrypoint.sh"]
    restart: unless-stopped
    networks:
      - appnet

  nginx:
    image: nginx:1.27-alpine
    container_name: nginx
    depends_on:
      - backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/var/www/html:ro
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    restart: unless-stopped
    networks:
      - appnet

  frontend:
    image: node:22-alpine
    container_name: frontend
    working_dir: /usr/src/app
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000/api/v1
      CHOKIDAR_USEPOLLING: "true"
    volumes:
      - ./frontend:/usr/src/app
    command: >
      sh -lc '
        apk add --no-cache libc6-compat >/dev/null 2>&1 || true;
        if [ -f package.json ] && [ -d node_modules ]; then
          echo ">> node_modules encontrados. Servindo o Next.js...";
          npm run dev -- -H 0.0.0.0 -p 3000;
        else
          echo ">> Contêiner do frontend pronto. Sem instalação automática.";
          echo "   Rode manualmente dentro do contêiner: npm ci && npm run dev";
          tail -f /dev/null;
        fi
      '
    ports:
      - "3000:3000"
    restart: unless-stopped
    networks:
      - appnet

volumes:
  mysql_data:

networks:
  appnet: {}
